DROP TABLE IF EXISTS dish CASCADE;
DROP TABLE IF EXISTS restaurant CASCADE;
DROP TABLE IF EXISTS vote CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS user_roles CASCADE;
DROP SEQUENCE IF EXISTS global_seq CASCADE;

CREATE SEQUENCE global_seq AS INTEGER START WITH 10000;

create table restaurant
(
    id   INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name varchar(255) not null
);
CREATE UNIQUE INDEX restaurants_name_unique_idx ON restaurant (name);

create table dish
(
    id        INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    rest_id  bigint       not null,
    price     integer      not null,
    name varchar(255) not null,
    date_of date DEFAULT NOW() not null,
    FOREIGN KEY (rest_id ) REFERENCES restaurant (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX menu_unique_idx ON dish (rest_id, name, date_of);
CREATE UNIQUE INDEX dish_unique_idx ON dish (name, date_of);


create table users
(
    id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name varchar(255) not null,
    email      varchar(255)                      not null,
    CONSTRAINT email_idx UNIQUE (email),
    enabled    boolean             default true  not null,
    password   varchar(255)                      not null,
    registered timestamp           default now() not null
);
CREATE UNIQUE INDEX users_unique_email_idx ON users (email);

create table user_roles
(
    user_id   INTEGER not null,
    role varchar(255),
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX user_roles_unique_idx ON user_roles (user_id, role);

create table vote
(
    id           INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    date_of date           DEFAULT now() not null,
    rating       integer                           not null,
    rest_id      bigint                            not null,
    user_id      bigint                            not null,
    FOREIGN KEY (rest_id) REFERENCES restaurant (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX votes_per_date_idx ON vote (user_id, date_of);
